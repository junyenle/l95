1. The old car broke down in the car park.

    1    The _ _ _ _ 3 det _ _
    2    old _ _ _ _ 3 amod _ _
    3    car _ _ _ _ 4 nsubj _ _
    4    broke _ _ _ _ 0 root _ _
    5    down _ _ _ _ 4 prt _ _
    6    in _ _ _ _ 4 prep _ _
    7    the _ _ _ _ 9 det _ _
    8    car _ _ _ _ 9 nn _ _
    9    park _ _ _ _ 6 pobj _ _
    10   . _ _ _ _ 4 punct _ _
    
2. At least two men broke in and stole 
my TV.

    1    At _ _ _ _ 3 quantmod _ _
    2    least _ _ _ _ 1 mwe _ _
    3    two _ _ _ _ 4 num _ _
    4    men _ _ _ _ 5 nsubj _ _
    5    broke _ _ _ _ 0 root _ _
    6    in _ _ _ _ 5 prt _ _
    7    and _ _ _ _ 5 cc _ _
    8    stole _ _ _ _ 5 conj _ _
    9    my _ _ _ _ 10 poss _ _
    10   TV _ _ _ _ 8 dobj _ _
    11   . _ _ _ _ 5 punct _ _
    
3. The horses were broken in and ridden in 
two weeks.
    
    1    The _ _ _ _ 2 det _ _
    2    horses _ _ _ _ 4 nsubjpass _ _
    3    were _ _ _ _ 4 auxpass _ _
    4    broken _ _ _ _ 0 root _ _
    5    in _ _ _ _ 4 prt _ _
    6    and _ _ _ _ 4 cc _ _
    7    ridden _ _ _ _ 4 conj _ _
    8    in _ _ _ _ 4 prep _ _
    9    two _ _ _ _ 10 num _ _
    10   weeks _ _ _ _ 8 pobj _ _
    11   . _ _ _ _ 4 punct _ _
    
4. Kim and Sandy both broke up with their
partners.
    
    1    Kim _ _ _ _ 5 nsubj _ _
    2    and _ _ _ _ 1 cc _ _
    3    Sandy _ _ _ _ 1 conj _ _
    4    both _ _ _ _ 3 det _ _
    5    broke _ _ _ _ 0 root _ _
    6    up _ _ _ _ 5 prt _ _
    7    with _ _ _ _ 5 prep _ _
    8    their _ _ _ _ 9 poss _ _
    9    partners _ _ _ _ 7 pobj _ _
    10   . _ _ _ _ 5 punct _ _
    
5. The horse which Kim sometimes rides is
more bad tempered than mine.
    
    1    The _ _ _ _ 2 det _ _
    2    horse _ _ _ _ 10 nsubj _ _
    3    which _ _ _ _ 6 dobj _ _
    4    Kim _ _ _ _ 6 nsubj _ _
    5    sometimes _ _ _ _ 6 advmod _ _
    6    rides _ _ _ _ 2 rcmod _ _
    7    is _ _ _ _ 10 cop _ _
    8    more _ _ _ _ 10 advmod _ _
    9    bad _ _ _ _ 10 advmod _ _
    10   tempered _ _ _ _ 0 root _ _
    11   than _ _ _ _ 10 prep _ _
    12   mine _ _ _ _ 11 pobj _ _
    13   . _ _ _ _ 10 punct _ _
    
6. English also has many words of more or
less unique function, including
interjections (oh, ah), negatives (no,
not), politeness markers (please, thank
you), and the existential ‘there’ (there
are horses but not unicorns) among others.
    
    1    English _ _ _ _ 3 nsubj _ _
    2    also _ _ _ _ 3 advmod _ _
    3    has _ _ _ _ 0 root _ _
    4    many _ _ _ _ 5 amod _ _
    5    words _ _ _ _ 3 dobj _ _
    6    of _ _ _ _ 5 prep _ _
    7    more _ _ _ _ 10 advmod _ _
    8    or _ _ _ _ 7 cc _ _ _ _
    9    less _ _ _ _ 7 conj _ _
    10   unique _ _ _ _ 11 amod _ _
    11   function _ _ _ _ 6 pobj _ _
    12   , _ _ _ _ 3 punct _ _
    13   including _ _ _ _ 5 vmod _ _
    14   interjections _ _ _ _ 13 dobj _ _
    15   ( _ _ _ _ 16 punct _ _
    16   oh _ _ _ _ 14 appos _ _
    17   , _ _ _ _ 16 punct _ _
    18   ah _ _ _ _ 16 conj _ _
    19   ) _ _ _ _ 16 punct _ _
    20   , _ _ _ _ 14 punct _ _
    21   negatives _ _ _ _ 14 conj _ _
    22   ( _ _ _ _ 23 punct _ _
    23   no _ _ _ _ 21 appos _ _
    24   , _ _ _ _ 23 punct _ _
    25   not _ _ _ _ 23 conj _ _
    26   ) _ _ _ _ 23 punct _ _
    27   , _ _ _ _ 14 punct _ _
    28   politeness _ _ _ _ 29 nn _ _
    29   markers _ _ _ _ 14 conj _ _
    30   ( _ _ _ _ 31 punct _ _
    31   please _ _ _ _ 29 appos _ _
    32   , _ _ _ _ 31 punct _ _
    33   thank _ _ _ _ 31 conj _ _
    34   you _ _ _ _ 33 dobj _ _
    35   ) _ _ _ _ 31 punct _ _
    36   , _ _ _ _ 14 punct _ _
    37   and _ _ _ _ 14 cc _ _
    38   the _ _ _ _ 41 det _ _
    39   existential _ _ _ _ 41 amod _ _
    40   ' _ _ _ _ 41 punct _ _
    41   there _ _ _ _ 14 conj _ _
    42   ' _ _ _ _ 41 punct _ _
    43   ( _ _ _ _ 45 punct _ _
    44   there _ _ _ _ 45 expl _ _
    45   are _ _ _ _ 41 dep _ _
    46   horses _ _ _ _ 45 nsubj _ _
    47   but _ _ _ _ 46 cc _ _
    48   not _ _ _ _ 49 neg _ _
    49   unicorns _ _ _ _ 46 conj _ _
    50   ) _ _ _ _ 45 punct _ _
    51   among _ _ _ _ 14 prep _ _
    52   others _ _ _ _ 51 pobj _ _
    53   . _ _ _ _ 3 punct _ _

7. Making these decisions requires
sophisticated knowledge of syntax;
tagging manuals (Santorini, 1990) 
give various heuristics that can help 
human coders make these decisions and 
that can also provide useful features 
for automatic taggers. 

    1    Making _ _ _ _ 4 csubj _ _
    2    these _ _ _ _ 3 det _ _
    3    decisions _ _ _ _ 1 dobj _ _
    4    requires _ _ _ _ 0 root _ _
    5    sophisticated _ _ _ _ 6 amod _ _
    6    knowledge _ _ _ _ 4 dobj _ _
    7    of _ _ _ _ 6 prep _ _
    8    syntax _ _ _ _ 7 pobj _ _
    9    ; _ _ _ _ 4 punct _ _
    10   tagging _ _ _ _ 11 amod _ _
    11   manuals _ _ _ _ 17 nsubj _ _
    12   ( _ _ _ _ 11 punct _ _
    13   Santorini _ _ _ _ 11 appos _ _
    14   , _ _ _ _ 13 punct _ _
    15   1990 _ _ _ _ 13 dep _ _
    16   ) _ _ _ _ 11 punct _ _
    17   give _ _ _ _ 4 parataxis _ _
    18   various _ _ _ _ 19 amod _ _
    19   heuristics _ _ _ _ 17 dobj _ _
    20   that _ _ _ _ 22 nsubj _ _
    21   can _ _ _ _ 22 aux _ _
    22   help _ _ _ _ 19 rcmod _ _
    23   human _ _ _ _ 24 amod_ _
    24   coders _ _ _ _ 22 dobj _ _
    25   make _ _ _ _ 22 xcomp _ _
    26   these _ _ _ _ 27 det _ _
    27   decisions _ _ _ _ 25 dobj _ _
    28   and _ _ _ _ 22 cc _ _
    29   that _ _ _ _ 32 nsubj _ _
    30   can _ _ _ _ 32 aux _ _
    31   also _ _ _ _ 32 advmod _ _
    32   provide _ _ _ _ 22 conj _ _
    33   useful _ _ _ _ 34 amod _ _
    34   features _ _ _ _ 32 dobj _ _
    35   for _ _ _ _ 34 prep _ _
    36   automatic _ _ _ _ 37 amod _ _
    37   taggers _ _ _ _ 35 pobj _ _
    38   . _ _ _ _ 4 punct _ _

8. The slightly simplified version of 
the Viterbi algorithm that we present 
takes as input a single HMM and a 
sequence of observed words O = (o1,o2,...oT) 
and returns the most probable state/tag 
sequence Q = (q1,q2,qT) together with 
its probability. 

    1    The _ _ _ _ 4 det _ _
    2    slightly _ _ _ _ 3 advmod _ _
    3    simplified _ _ _ _ 4 amod _ _
    4    version _ _ _ _ 12 nsubj _ _
    5    of _ _ _ _ 4 prep _ _
    6    the _ _ _ _ 8 det _ _
    7    Viterbi _ _ _ _ 8 nn _ _
    8    algorithm _ _ _ _ 5 pobj _ _
    9    that _ _ _ _ 11 mark _ _
    10   we _ _ _ _ 11 nsubj _ _
    11   present _ _ _ _ 4 rcmod _ _
    12   takes _ _ _ _ 0 root _ _
    13   as _ _ _ _ 12 prep _ _
    14   input _ _ _ _ 13 pobj _ _
    15   a _ _ _ _ 17 det _ _
    16   single _ _ _ _ 17 amod _ _
    17   HMM _ _ _ _ 12 dobj _ _
    18   and _ _ _ _ 17 cc _ _
    19   a _ _ _ _ 20 det _ _
    20   sequence _ _ _ _ 17 conj _ _
    21   of _ _ _ _ 20 prep _ _
    22   observed _ _ _ _ 23 amod _ _
    23   words _ _ _ _ 21 pobj _ _
    24   O=(o1,o2,...oT) _ _ _ _ 23 appos _ _
    25   and _ _ _ _ 12 cc _ _
    26   returns _ _ _ _ 12 conj _ _
    27   the _ _ _ _ 33 det _ _
    28   most _ _ _ _ 29 advmod _ _
    29   probable _ _ _ _ 33 amod _ _
    30   state _ _ _ _ 33 nn _ _
    31   / _ _ _ _ 30 cc _ _
    32   tag _ _ _ _ 30 conj _ _
    33   sequence _ _ _ _ 26 dobj _ _
    34   Q=(q1,q2,qT) _ _ _ _ 33 appos _ _
    35   together _ _ _ _ 36 advmod _ _
    36   with _ _ _ _ 33 prep _ _
    37   its _ _ _ _ 38 poss _ _
    38   probability _ _ _ _ 36 pobj _ _
    39   . _ _ _ _ 12 punct _ _
    
9. Thus the EM-trained "pure HMM" tagger 
is probably best suited to cases where 
no training data is available, for 
example, when tagging languages for 
which no data was previously hand-tagged. 

    1    Thus _ _ _ _ 12 advmod _ _
    2    the _ _ _ _ 8 det _ _
    3    EM-trained _ _ _ _ 8 amod _ _
    4    " _ _ _ _ 6 punct _ _
    5    pure _ _ _ _ 6 amod _ _
    6    HMM _ _ _ _ 8 nn _ _
    7    " _ _ _ _ 6 punct _ _
    8    tagger _ _ _ _ 12 nsubj _ _
    9    is _ _ _ _ 12 aux _ _
    10   probably _ _ _ _ 12 advmod _ _
    11   best _ _ _ _ 12 amod _ _
    12   suited _ _ _ _ 0 root _ _
    13   to _ _ _ _ 12 prep _ _
    14   cases _ _ _ _ 13 pobj _ _
    15   where _ _ _ _ 20 advmod _ _
    16   no _ _ _ _ 18 neg _ _
    17   training _ _ _ _ 18 amod _ _
    18   data _ _ _ _ 20 nsubj _ _
    19   is _ _ _ _ 20 cop _ _
    20   available _ _ _ _ 14 advcl _ _
    21   , _ _ _ _ 14 punct _ _
    22   for _ _ _ _ 14 prep _ _
    23   example _ _ _ _ 22 pobj _ _
    24   , _ _ _ _ 14 punct _ _
    25   when _ _ _ _ 26 advmod _ _
    26   tagging _ _ _ _ 12 advcl _ _
    27   languages _ _ _ _ 26 dobj _ _
    28   for _ _ _ _ 34 prep _ _
    29   which _ _ _ _ 28 dobj _ _
    30   no _ _ _ _ 31 neg _ _
    31   data _ _ _ _ 34 nsubjpass _ _
    32   was _ _ _ _ 34 auxpass _ _
    33   previously _ _ _ _ 34 advmod _ _
    34   hand-tagged _ _ _ _ 27 rcmod _ _
    35   . _ _ _ _ 12 punct _ _

10. Skill without imagination is 
craftsmanship and gives us many useful 
objects such as wickerwork picnic baskets. 
Imagination without skill gives us modern 
art. 

    1    Skill _ _ _ _ 5 nsubj _ _
    2    without _ _ _ _ 1 prep _ _
    3    imagination _ _ _ _ 2 pobj _ _
    4    is _ _ _ _ 5 cop _ _
    5    craftsmanship _ _ _ _ 0 root _ _
    6    and _ _ _ _ 5 cc _ _
    7    gives _ _ _ _ 5 conj _ _
    8    us _ _ _ _ 7 iobj _ _
    9    many _ _ _ _ 11 amod _ _
    10   useful _ _ _ _ 11 amod _ _
    11   objects _ _ _ _ 7 dobj _ _
    12   such _ _ _ _ 13 mwe _ _
    13   as _ _ _ _ 11 prep _ _
    14   wickerwork _ _ _ _ 16 nn _ _
    15   picnic _ _ _ _ 16 nn _ _
    16   baskets _ _ _ _ 13 pobj _ _
    17   . _ _ _ _ 5 punct _ _
    18   Imagination _ _ _ _ 21 nsubj _ _
    19   without _ _ _ _ 18 prep _ _
    20   skill _ _ _ _ 19 pobj _ _
    21   gives _ _ _ _ 0 root _ _
    22   us _ _ _ _ 21 iobj _ _
    23   modern _ _ _ 24 amod _ _
    24   art _ _ _ _ 21 dobj _ _
    25   . _ _ _ _ 21 punct _ _